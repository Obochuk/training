package model.database.dao;

import model.database.connection.DatabaseConnection;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

public interface GenericDAO<T, K> {
    Connection CONNECTION = DatabaseConnection.getConnection();

    /**
     * retrieve all entities of T type from db
     * @return list of retrieved entities
     * @throws SQLException
     */
    List<T> getAll() throws SQLException;

    /**
     * select one entity from db
     * @param id key of value to select
     * @return selected value or null if it doesn't exist
     * @throws SQLException
     */
    T getById(K id) throws SQLException;

    /**
     * delete entity from db
     * @param elem entity to delete
     * @return {@code true} if value successfully deleted, {@code false} otherwise
     * @throws SQLException
     */
    boolean delete(T elem) throws SQLException;

    /**
     * if elem doesn't exist in db insert it, otherwise update it
     * @param elem entity to merge
     * @return {@code true} if value successfully merged, {@code false} otherwise
     * @throws SQLException
     */
    boolean merge(T elem) throws SQLException;

    /**
     * Inserts entity into db ignoring its id value - it will be generated by db if possible
     * @param elem entity that will be or not inserted into database
     * @return {@code true} if value successfully inserted, {@code false} otherwise
     * @throws SQLException
     */
    boolean insert(T elem) throws SQLException;

}
